---
# define intervals and escalations
# in your Check resource
apiVersion: "crd.k8s.afrank.local/v1"
kind: Check
metadata:
  name: check-iam-prod-sso-login
  namespace: mozalert-prod
  labels:
    team: eis
    type: mozlenium
spec:
  check_interval: 5m
  retry_interval: 3m
  notification_interval: 15m
  max_attempts: 3
  escalations:
  - type: slack
    env_args:
      webhook_url: "SLACK_DEFAULT_WEBHOOK_URL"
      channel: "SLACK_DEFAULT_CHANNEL"
  image: afrank/mozlenium
  secret_ref: mozlenium-shared-secrets
  check_cm: check-iam-prod-sso-login-cm
  references:
    source_code: "https://github.com/mozilla-it/itse-apps-prod-2-infra/blob/main/k8s/workloads/checks/eis/check-iam-prod-sso-login.yaml"

---
# here is the check itself, stored in a configmap
# this block was generated with 
# k create configmap check-test-1-cm --from-file=./check.js
kind: ConfigMap
apiVersion: v1
metadata:
  name: check-iam-prod-sso-login-cm
  namespace: mozalert-prod
data:
  check.js: |+
    $browser.get('https://prod.testrp.security.allizom.org/').then(function (){
      return $browser.waitForAndFindElement($driver.By.xpath('//*[@id="field-email"]'), 10000);
    }).then(function (){
      return $browser.findElement($driver.By.xpath('//*[@id="field-email"]')).sendKeys('moc-sso-monitoring@mozilla.com');
    }).then(function () {
      return $browser.findElement($driver.By.xpath('//*[@id="enter-initial"]')).click();
    }).then(function (){
      return $browser.waitForAndFindElement($driver.By.xpath('//*[@id="field-password"]'), 10000);
    }).then(function (){
      return $browser.findElement($driver.By.xpath('//*[@id="field-password"]')).sendKeys($secure.SSO_LDAP_PASSWORD);
    }).then(function (){
      return $browser.findElement($driver.By.xpath('//*[@id="authorise-ldap-credentials"]')).click();
    }).then(function (){
      return $browser.waitForAndFindElement($driver.By.xpath('//*[@class="sand"]'),10000).then(function(){
         console.log('Logged in, found expected element!');
        });
    });

