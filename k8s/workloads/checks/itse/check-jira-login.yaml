---
# define intervals and escalations
# in your Check resource
apiVersion: "crd.k8s.afrank.local/v1"
kind: Check
metadata:
  name: check-jira-login
  namespace: mozalert-prod
  labels:
    team: itse
    type: mozlenium
spec:
  check_interval: 5m
  retry_interval: 3m
  notification_interval: 15m
  max_attempts: 3
  image: afrank/mozlenium
  secret_ref: mozlenium-shared-secrets
  check_cm: check-jira-login-cm
  escalations:
  - type: slack
    env_args:
      webhook_url: "SLACK_DEFAULT_WEBHOOK_URL"
      channel: "SLACK_DEFAULT_CHANNEL"


---
# here is the check itself, stored in a configmap
# this block was generated with 
# k create configmap check-test-1-cm --from-file=./demo-check.js
kind: ConfigMap
apiVersion: v1
metadata:
  name: check-jira-login-cm
  namespace: mozalert-prod
data:
  check.js: |+
    //jira.mozilla.com - Login
    
    var assert = require('assert');
    var user = "moc-sso-monitoring@mozilla.com"
    var url = 'https://jira.mozilla.com'
    
    console.log("starting check");
    
    $browser.get(url).then(function () {
      return $browser.waitForAndFindElement($driver.By.xpath('//*[@id="field-email"]'), 60000);
    }).then(function (){ 
      return $browser.findElement($driver.By.xpath('//*[@id="field-email"]')).sendKeys(user);
    }).then(function (){ 
      return $browser.findElement($driver.By.xpath('//*[@id="enter-initial"]')).click();
    }).then(function (){ 
      return $browser.waitForAndFindElement($driver.By.xpath('//*[@id="field-password"]'), 60000);
    }).then(function (){ 
      return $browser.findElement($driver.By.xpath('//*[@id="field-password"]')).sendKeys($secure.SSO_LDAP_PASSWORD);
    }).then(function (){ 
      return $browser.findElement($driver.By.xpath('//*[@id="authorise-ldap-credentials"]')).click();
    }).then(function (){
      return $browser.wait(function() {
        return $browser.getTitle().then(function(title) {
          console.log(title);
          return title === "System dashboard - Jira";
        });
      }, 60000);
    }); 
